
C:\git-repo\compiladores\tpCompilador_1C_2025\sources>set TEST_FILE= 

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>echo "el archivo encontrado es " 
"el archivo encontrado es "

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>if not "" == "" (echo "corriendo test con " )  else (set TEST_FILE=test.txt ) 

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>flex Lexico.l 

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>bison -dyv Sintactico.y 

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>gcc.exe ./funciones/lista.c ./funciones/funciones.c ./funciones/PilaEstaticaASM.c ./funciones/AssemblerUtils.c lex.yy.c y.tab.c -o compilador.exe 

C:\git-repo\compiladores\tpCompilador_1C_2025\sources>compilador.exe "test.txt" 

INICIO DE COMPILACION
Starting Reverse Polish Notation...

Lexico --> Init: init

Lexico --> Llave apertura: {

Lexico --> Identificador: a

Lexico --> Coma: ,

Lexico --> Identificador: a1

Lexico --> Coma: ,

Lexico --> Identificador: b1

Lexico --> Coma: ,

Lexico --> Identificador: x1

Lexico --> Coma: ,

Lexico --> Identificador: z

Lexico --> Coma: ,

Lexico --> Identificador: f

Lexico --> Dos Puntos: :

Lexico --> Float: Float

Lexico --> Identificador: variable1

Lexico --> Coma: ,

Lexico --> Identificador: d

Lexico --> Coma: ,

Lexico --> Identificador: c

Lexico --> Coma: ,

Lexico --> Identificador: x

Lexico --> Coma: ,

Lexico --> Identificador: r

Lexico --> Coma: ,

Lexico --> Identificador: j

Lexico --> Dos Puntos: :

Lexico --> Int: Int

Lexico --> Identificador: b

Lexico --> Coma: ,

Lexico --> Identificador: p1

Lexico --> Coma: ,

Lexico --> Identificador: p2

Lexico --> Coma: ,

Lexico --> Identificador: p3

Lexico --> Dos Puntos: :

Lexico --> String: String

Lexico --> Llave cierre: }
Bloque declaracion INIT

Lexico --> Identificador: a

Lexico --> Asignacion: :=

Lexico --> Constante flotante: 99999.99
CTE_FLOAT es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: a

Lexico --> Asignacion: :=

Lexico --> Constante flotante: 2.
CTE_FLOAT es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: a1

Lexico --> Asignacion: :=

Lexico --> Constante flotante: .9999
CTE_FLOAT es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: b1

Lexico --> Asignacion: :=

Lexico --> Constante flotante: 6.0
CTE_FLOAT es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: x1

Lexico --> Asignacion operacion: =:
CTE_INTEGER es Factor
Factor es Termino

Lexico --> Multiplicacion: *

Lexico --> Identificador: b1
ID es Factor 
Termino * Factor es Termino

Lexico --> Suma: +
Termino es Expresion

Lexico --> Identificador: a
ID es Factor 
Factor es Termino

Lexico --> Write: write
Expresion + Termino es Expresion
ID =: expresion es ASIGNACION

Lexico --> ParAbre: (

Lexico --> Identificador: x1

Lexico --> ParCierra: )

Lexico --> Identificador: b1

Lexico --> Asignacion: :=

Lexico --> Constante flotante: 2.5
CTE_FLOAT es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: x1

Lexico --> Asignacion operacion: =:
CTE_INTEGER es Factor
Factor es Termino

Lexico --> Division: /

Lexico --> Identificador: b1
ID es Factor 
Termino / Factor es Termino

Lexico --> Suma: +
Termino es Expresion

Lexico --> Identificador: a
ID es Factor 
Factor es Termino

Lexico --> Write: write
Expresion + Termino es Expresion
ID =: expresion es ASIGNACION

Lexico --> ParAbre: (

Lexico --> Identificador: x1

Lexico --> ParCierra: )

Lexico --> Identificador: b

Lexico --> Asignacion: :=

Lexico --> Constante string: "@sdADaSjfla%dfg"
CTE_STRING es Factor
ID = factor es ASIGNACION

Lexico --> Identificador: p1

Lexico --> Asignacion: :=

Lexico --> Constante string: "asldk  fh sjf"
CTE_STRING es Factor
ID = factor es ASIGNACION
_______________________________________________________________________________
|NOMBRE                   |TIPODATO      |VALOR                    |LONGITUD  |
_______________________________________________________________________________
|_.9999                   |CTE_FLOAT     |.9999                    |0         |
|_1                       |CTE_INT       |1                        |0         |
|_10                      |CTE_INT       |10                       |0         |
|_2.                      |CTE_FLOAT     |2.                       |0         |
|_2.5                     |CTE_FLOAT     |2.5                      |0         |
|_6.0                     |CTE_FLOAT     |6.0                      |0         |
|_99999.99                |CTE_FLOAT     |99999.99                 |0         |
|_@sdADaSjfla%dfg         |CTE_STRING    |@sdADaSjfla%dfg          |15        |
|_asldk  fh sjf           |CTE_STRING    |asldk  fh sjf            |13        |
|a                        |FLOAT         |                         |0         |
|a1                       |FLOAT         |                         |0         |
|b                        |STRING        |                         |0         |
|b1                       |FLOAT         |                         |0         |
|c                        |INTEGER       |                         |0         |
|d                        |INTEGER       |                         |0         |
|f                        |FLOAT         |                         |0         |
|j                        |INTEGER       |                         |0         |
|p1                       |STRING        |                         |0         |
|p2                       |STRING        |                         |0         |
|p3                       |STRING        |                         |0         |
|r                        |INTEGER       |                         |0         |
|variable1                |INTEGER       |                         |0         |
|x                        |INTEGER       |                         |0         |
|x1                       |FLOAT         |                         |0         |
|z                        |FLOAT         |                         |0         |
_______________________________________________________________________________

################ Reverse Polish Notation ################
[000] -> 99999.99
[001] -> a
[002] -> =:
[003] -> 2.
[004] -> a
[005] -> =:
[006] -> .9999
[007] -> a1
[008] -> =:
[009] -> 6.0
[010] -> b1
[011] -> =:
[012] -> 1
[013] -> b1
[014] -> *
[015] -> a
[016] -> +
[017] -> x1
[018] -> =:
[019] -> x1
[020] -> write
[021] -> 2.5
[022] -> b1
[023] -> =:
[024] -> 10
[025] -> b1
[026] -> /
[027] -> a
[028] -> +
[029] -> x1
[030] -> =:
[031] -> x1
[032] -> write
[033] -> "@sdADaSjfla%dfg"
[034] -> b
[035] -> =:
[036] -> "asldk  fh sjf"
[037] -> p1
[038] -> =:

#########################################################


:: INICIANDO GENERACION CODIGO ASM ----------------------
La polaca tiene 39Intentando abrir/crear y limpiar el archivo 'Final.asm'...
Ensamble Completo generado exitosamente en 'Final.asm'.
Archivo cerrado. Puedes verificar su contenido.

COMPILACION EXITOSA
Press any key to continue . . . 
