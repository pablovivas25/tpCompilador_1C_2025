#+ Declaracion +#

init {
    a, a1, b1 : Float
    variable1 : Int
    b, p1, p2, p3 : String
}

#+ asginaciones +#
a := 99999.99
a := 99.
a := .9999

b := "@sdADaSjfla%dfg"
b := "asldk  fh sjf"

#+ condiciones +#
if (a > b)
{
    write("a es mas grande que b")
}
else
{
    write("a es mas chico o igual a b")
}

#+ Ejemplo AND +#
a := 1
b := 1
c := 2

if (a > b AND c > b)
{
    write("a es mas grande que b y c es mas grande que b")
}

#+ Ejemplo OR +#
a := 1
b := 1
c := 2

if (a > b OR c > b)
{
    write("a es mas grande que b o c es mas grande que b")
}

#+ Ejemplo NOT +#
a := 1
b := 1
c := 2

if (NOT a > b)
{
    write("a no es mas grande que b")
}

#+ ciclo +#
a := 1
b := 3

while (a > b)
{
    write("a es mas grande que b")
    a := a + 1
}

#+ Entrada y salida +#

read(base) #+ base es una variable +#

write("texto")  #+ "texto" es una cte string +#
write(variable1)  #+ var1 es una variable numerica definida previamente +#

#+ EstaContenido +#
if(EstaContenido("Homplato", "plato")) 
{
    write("Esta contenido")
} 
else
{
    write("No esta contenido")
}

#+ Operaciones aritmeticas +#
x =: 27 - c
x =: r + 500
x =: 34 * 3
x =: z / f

#+ FirstIndexOf +#
z=0
x=0
a=4
b=2
x=7
C=6

reorder([x+3, 1+1, 9-x],1,2)  #+ la primer posici√≥n es cero+#
#+ [9-x, 1+1, x+3]  luego de reordenar +#

a := 4.1
b := -1.5

x := negativeCalculation(3.5, -2.0, a, b, -3.0)
#+ Cantidad de negativos: 3 (impar) +#
#+ x := (-2.0) * (-1.5) * (-3.0) = -9.0 +#
